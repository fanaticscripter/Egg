syntax = "proto2";

package ei;

import "common.proto";

message Vector3 {
    optional float x = 1;
    optional float y = 2;
    optional float z = 3;
}

message Vector4 {
    optional float x = 1;
    optional float y = 2;
    optional float z = 3;
    optional float w = 4;
}

message Backup {
    optional string user_id = 1;
    optional string ei_user_id = 18;
    optional string game_services_id = 16;
    optional string push_user_id = 26;
    optional string device_id = 17;
    optional string user_name = 2;
    optional double approx_time = 3;
    optional uint32 version = 21 [default = 0];
    optional bool force_offer_backup = 20;
    optional bool force_backup = 22;
    
    optional Settings settings = 4;
    message Settings {
        optional bool sfx = 1;
        optional bool music = 2;
        optional bool low_battery_mode = 3;
        optional bool low_performance_mode = 4;
        optional bool force_touch_chicken_btn = 9;
        optional bool notifications_queried = 5;
        optional double last_notification_query_time = 27;
        optional bool notifications_on = 6;
        optional bool notify_daily_gift = 11;
        optional bool low_performance = 10;
        optional bool auto_stop_fueling = 25;
        optional bool max_enabled = 26;
        optional bool hide_cc_status = 28;
        optional bool contracts_widget_enabled = 29;
        optional double last_backup_time = 24;
        optional bool coppa_queried = 7;
        optional bool coppa_restricted = 8;
        optional bool gdpr_consent_queried = 12;
        optional bool gdpr_age_restricted = 16;
        optional bool gdpr_consent_given = 13;
        optional bool age_queried = 18;
        optional bool age_restricted = 19 [default = false];
        optional bool data_collection_consent_queried = 20;
        optional bool data_collection_consent_given = 21;
        optional uint32 last_day_age_queried = 17;
        optional bool user_ads_enabled = 14 [default = true];
        optional bool user_cloud_enabled = 15 [default = true];
        optional bool user_analytics_enabled = 22 [default = true];
        optional bool user_personalized_ads_enabled = 23 [default = true];
    }
    
    optional Tutorial tutorial = 5;
    message Tutorial {
        optional bool intro_shown = 1;
        optional bool click_tutorial_shown = 2;
        optional bool buy_hab_shown = 3;
        optional bool hire_vehicle_shown = 4;
        optional bool q_num_shown = 5;
        optional bool s_num_shown = 6;
        optional bool contracts_tab_shown = 7;
        optional bool contract_info_shown = 8;
        optional bool join_coop_shown = 9;
        optional bool switch_farm_shown = 10;
        repeated bool tutorial_shown = 11;
    }
    
    optional Stats stats = 6;
    message Stats {
        repeated uint64 egg_totals_OLD = 1;
        repeated double egg_totals = 8;
        optional uint64 unlimited_chickens_uses = 7;
        optional uint64 refill_uses = 2;
        optional uint64 warp_1_uses = 4;
        optional uint64 warp_8_uses = 5;
        optional uint64 boosts_used = 13;
        optional uint64 video_doubler_uses = 3;
        optional uint64 drone_takedowns = 6;
        optional uint64 drone_takedowns_elite = 10;
        optional uint64 num_prestiges = 9;
        optional uint64 num_piggy_breaks = 11;
        optional uint64 iap_packs_purchased = 12;
        optional bool piggy_full = 14;
        optional bool piggy_found_full = 15;
        optional double time_piggy_filled_realtime = 16;
        optional double time_piggy_full_gametime = 17;
        optional uint64 lost_piggy_increments = 18;
    }
    
    optional Game game = 7;
    message Game {
        optional uint32 current_farm = 22 [default = 0];
        optional Egg max_egg_reached = 1;
        optional uint64 golden_eggs_earned = 2;
        optional uint64 golden_eggs_spent = 3;
        optional uint64 uncliamed_golden_eggs = 16;
        optional uint64 soul_eggs = 4;
        optional uint64 unclaimed_soul_eggs = 17;
        optional double soul_eggs_d = 34;
        optional double unclaimed_soul_eggs_d = 35;
        optional uint64 eggs_of_prophecy = 23;
        optional uint64 unclaimed_eggs_of_prophecy = 24;
        optional uint64 shell_scripts_earned = 38;
        optional uint64 shell_scripts_spent = 39;
        optional uint64 unclaimed_shell_scripts = 40;
        optional double prestige_cash_earned = 5;
        optional double prestige_soul_boost_cash = 33;
        optional double lifetime_cash_earned = 6;
        optional uint64 piggy_bank = 7;
        optional bool piggy_full_alert_shown = 31;
        optional uint32 permit_level = 8;
        repeated ResearchItem epic_research = 9;
        optional bool hyperloop_station = 29;
        optional double next_daily_gift_time = 10;
        optional uint32 last_daily_gift_collected_day = 20;
        optional uint32 num_daily_gifts_collected = 28;
        repeated NewsHeadline news = 11;
        optional double last_news_time = 12;
        optional double current_multiplier = 13;
        optional double current_multiplier_expiration = 14;
        repeated AchievementInfo achievements = 15;
        repeated uint64 max_farm_size_reached = 18;
        repeated uint32 egg_medal_level = 19;
        optional bool long_idle_notification_set = 25;
        optional double long_idle_notification_threshold = 26;
        optional double long_idle_reward = 27;
        repeated OwnedBoost boosts = 30;
        optional uint32 total_time_cheats_detected = 32;
        optional bool force_elite_contracts = 36;
        optional double new_player_event_end_time = 37;
    }
    
    optional Artifacts artifacts = 14;
    message Artifacts {
        optional bool infusing = 1;
        optional ArtifactInventoryItem item_being_infused = 2;
        optional ArtifactSpec spec_being_infused = 13;
        optional Egg egg_type_infusing = 3;
        optional double infusing_eggs_required = 4;
        optional double eggs_infused = 5;
        optional double flow_percentage_artifacts = 6 [default = 0.5];
        optional bool fueling_enabled = 7 [default = true];
        optional bool tank_filling_enabled = 14;
        optional uint32 tank_level = 15;
        repeated double tank_fuels = 16;
        repeated double tank_limits = 18;
        optional MissionInfo.Spaceship last_fueled_ship = 9;
        optional double inventory_score = 10;
        optional double crafting_xp = 17;
        optional bool enabled = 11;
        optional bool intro_shown = 12;
        optional bool infusing_enabled_DEPRECATED = 8 [default = true];
    }
    
    optional Shells shells = 25;
    message Shells {
        optional bool intro_alert = 1;
        optional bool contracts_intro_alert = 2;
        repeated int32 num_new = 3;
    }
    
    optional Simulation sim = 8;
    message Simulation {
        optional Egg egg_type = 1;
        optional FarmType farm_type = 19;
        optional string contract_id = 20;
        optional double cash_earned = 2;
        optional double cash_spent = 3;
        optional double unclaimed_cash = 4;
        optional double last_step_time = 5;
        optional uint64 num_chickens = 6;
        optional uint64 num_chickens_unsettled = 7;
        optional uint64 num_chickens_running = 8;
        optional double eggs_laid = 9;
        optional double eggs_shipped = 30;
        optional double eggs_paid_for = 10;
        optional uint32 silos_owned = 11;
        repeated uint32 habs = 12;
        repeated uint64 hab_population = 13;
        repeated uint64 hab_population_indound = 14;
        repeated double hab_incubator_popuplation = 15;
        optional double hatchery_population = 16;
        repeated uint32 vehicles = 17;
        repeated uint32 train_length = 21;
        repeated ResearchItem common_research = 18;
        repeated ActiveBoost active_boosts = 22;
        optional double last_cash_boost_time = 31;
        optional uint32 time_cheats_detected = 23;
        optional double time_cheat_debt = 24;
        optional uint32 boost_tokens_received = 25;
        optional uint32 boost_tokens_spent = 26;
        optional uint32 boost_tokens_given = 28;
        optional uint32 unclaimed_boost_tokens = 27;
        optional double gametime_until_next_boost_token = 29;
    }
    
    repeated Simulation farms = 12;
    
    optional Mission mission = 9;
    message Mission {
        optional string current_mission = 1;
        optional double reference_value = 2;
        repeated string current_missions = 4;
        repeated MissionInfo missions = 3;
    }
    
    optional Misc misc = 10;
    message Misc {
        optional bool chicken_btn_pref_big = 1;
        optional bool free_hatchery_refill_given = 2;
        optional double last_share_farm_value = 3 [default = 10000000];
        optional double last_share_swarm_farm_value = 4 [default = 10000000];
        optional double last_share_swarm_size = 5 [default = 140];
        optional uint64 last_prestige_alert_soul_eggs_DEPRECATED = 10 [default = 45];
        optional uint64 friend_rank = 6;
        optional uint64 friend_rank_pop = 7;
        optional uint64 global_rank = 8;
        optional uint64 global_rank_pop = 9;
        optional bool challenges_alert = 20;
        optional bool trophy_alert = 11;
        optional bool ar_alert = 12;
        optional bool contracts_alert = 13;
        optional bool contracts_alert_v2 = 21;
        optional bool coop_alert = 14;
        optional bool coop_alert_v2 = 22;
        optional bool switch_alert = 15;
        optional bool egg_of_prophecy_alert = 16;
        optional bool boost_token_alert = 17;
        optional bool soul_egg_alert = 18;
        optional bool backup_reminder_alert = 19;
        optional bool max_button_alert = 23;
        optional bool mission_target_alert = 24;
    }
    
    optional MyContracts contracts = 13;
    optional ArtifactsDB artifacts_db = 15;
    optional ShellDB shell_db = 24;
    repeated string read_mail_ids = 23;
    optional MailState mail_state = 27;
    optional uint64 checksum = 100;
    optional string signature = 101;
    
    message ResearchItem {
        optional string id = 1;
        optional uint32 level = 2;
    }
    
    message NewsHeadline {
        optional string id = 1;
        optional bool read = 2;
    }
    
    message AchievementInfo {
        optional string id = 1;
        optional bool achieved = 2;
    }
    
    message ActiveBoost {
        optional string boost_id = 1;
        optional double time_remaining = 2;
        optional double reference_value = 3;
    }
    
    message OwnedBoost {
        optional string boost_id = 1;
        optional uint32 count = 2;
    }
    
    message MissionInfo {
        optional string id = 1;
        optional bool completed = 2;
        optional double reference_value = 3;
    }
}

message EggIncFirstContactRequest {
    optional BasicRequestInfo rinfo = 8;
    optional string ei_user_id = 4;
    optional string user_id = 1;
    optional string game_services_id = 7;
    optional string device_id = 5;
    optional string username = 6;
    optional uint32 client_version = 2;
    optional aux.Platform platform = 3;
}

message EggIncFirstContactResponse {
    optional string ei_user_id = 2;
    repeated string ids_transferred = 3;
    optional uint32 error_code = 4 [default = 0];
    optional string error_message = 5;
    optional Backup backup = 1;
    
    enum ErrorCodes {
        NO_ERROR = 0;
        EXISTING_USER_W_GAMER_ID = 1;
        USER_NOT_FOUND = 2;
        BACKUP_CONFLICT = 3;
    }
}

message EggIncAdConfig {
    repeated aux.AdNetwork network_priority = 1;
}

message DailyGiftInfo {
    optional uint32 current_day = 1;
    optional double seconds_to_next_day = 2;
}

message SalesInfoRequest {
    optional string user_id = 1;
    optional bool piggy_full = 2;
    optional bool piggy_found_full = 3;
    optional double seconds_full_realtime = 4;
    optional double seconds_full_gametime = 5;
    optional uint32 lost_increments = 7;
    optional uint32 current_client_version = 10;
}

message IAPSaleEntry {
    optional string product_id = 1;
    optional double seconds_remaining = 2;
    optional string discount_string = 3;
    optional string sale_id = 4;
}

message SalesInfo {
    repeated IAPSaleEntry sales = 1;
}

message EggIncEvent {
    optional string identifier = 1;
    optional double seconds_remaining = 2;
    optional string type = 3;
    optional double multiplier = 4;
    optional string subtitle = 5;
    optional double start_time = 6;
    optional double duration = 7;
    optional bool cc_only = 8;
}

message EggIncCurrentEvents {
    repeated EggIncEvent events = 1;
}

message DeviceInfo {
    optional string device_id = 1;
    optional string advertising_id = 13;
    optional string platform = 2;
    optional string form_factor = 3;
    optional string device_name = 4;
    optional string platform_version = 5;
    optional string locale_country = 6;
    optional string locale_language = 7;
    optional string gpu_vendor = 8;
    optional string gpu_model = 9;
    optional string device_bucket = 10;
    optional uint32 screen_width = 11;
    optional uint32 screen_height = 12;
}

message AppInfo {
    optional string version_str = 1;
    optional uint32 sessions = 2;
    optional uint32 num_prestiges = 3;
    optional uint64 soul_eggs = 4;
    optional uint32 current_egg = 5;
    optional uint64 gold_earned = 6;
    optional uint64 gold_spent = 7;
    optional uint32 current_mission = 8;
    optional uint32 piggy_size = 9;
    optional uint64 num_piggy_breaks = 10;
    optional uint64 verified_piggy_breaks = 29;
    optional uint64 iap_packs_purchased = 11;
    optional uint32 permit_level = 12;
    optional uint64 video_doubler_uses = 15;
    optional uint64 drone_takedowns = 18;
    optional uint64 drone_takedowns_elite = 19;
    optional bool trophies_unlocked = 20;
    optional float egg_level = 21;
    optional float struggle_factor = 22;
    optional bool piggy_full = 23;
    optional bool piggy_found_full = 24;
    optional double time_piggy_full_realtime = 25;
    optional double time_piggy_full_gametime = 26;
    optional uint64 lost_piggy_increments = 27;
    optional string sale_id = 28;
    optional uint64 unlimited_chickens_uses = 13;
    optional uint64 refill_uses = 14;
    optional uint64 short_warp_uses = 16;
    optional uint64 long_warp_uses = 17;
}

message ActionKeyValuePair {
    required string key = 1;
    required string value = 2;
}

message GenericAction {
    optional string user_id = 1;
    optional bool cc_user = 9;
    optional string advertising_id = 7;
    optional float approx_time_DEP = 2;
    optional double approx_time = 8;
    optional string action_name = 3;
    repeated ActionKeyValuePair data = 4;
    optional AppInfo app = 5;
    optional DeviceInfo device = 6;
}

message GenericActionBatchRequest {
    optional BasicRequestInfo rinfo = 1;
    repeated GenericAction actions = 2;
}

message VerifyPurchaseRequest {
    optional BasicRequestInfo rinfo = 6;
    optional string sku = 1;
    optional string transaction_id = 2;
    optional string original_transaction_id = 8;
    optional string receipt = 3;
    optional string platform = 4;
    optional bool sandbox = 7;
    optional GenericAction log = 5;
}

message VerifyPurchaseResponse {
    optional bool verified = 1;
    optional string message = 2;
}

message CurrencyFlowLog {
    optional string user_id = 1;
    optional double approx_time = 2;
    optional RewardType currency = 3;
    optional int64 amount = 4;
    optional string location = 5;
    optional string version = 6;
    optional string platform = 7;
    optional double soul_eggs = 8;
    optional uint64 tickets_spent = 9;
    optional uint64 gold_spent = 10;
}

message CurrencyFlowBatchRequest {
    optional BasicRequestInfo rinfo = 2;
    repeated CurrencyFlowLog logs = 1;
}

message Reward {
    optional RewardType reward_type = 1;
    optional string reward_sub_type = 2;
    optional double reward_amount = 3;
}

message GameModifier {
    optional GameDimension dimension = 1;
    enum GameDimension {
        EARNINGS = 1;
        AWAY_EARNINGS = 2;
        INTERNAL_HATCHERY_RATE = 3;
        EGG_LAYING_RATE = 4;
        SHIPPING_CAPACITY = 5;
        HAB_CAPACITY = 6;
        VEHICLE_COST = 7;
        HAB_COST = 8;
        RESEARCH_COST = 9;
    }
    
    optional double value = 2;
    optional string description = 3;
}

message Contract {
    optional string identifier = 1;
    optional string name = 9;
    optional string description = 10;
    optional Egg egg = 2;
    
    repeated Goal goals = 3;
    message Goal {
        optional GoalType type = 1;
        optional double target_amount = 2;
        optional RewardType reward_type = 3;
        optional string reward_sub_type = 4;
        optional double reward_amount = 5;
        optional double target_soul_eggs = 6;
    }
    
    repeated GoalSet goal_sets = 16;
    message GoalSet {
        repeated Goal goals = 1;
    }
    
    repeated GradeSpec grade_specs = 20;
    message GradeSpec {
        optional PlayerGrade grade = 1;
        repeated Goal goals = 2;
        repeated GameModifier modifiers = 3;
        optional double length_seconds = 4;
    }
    
    optional string season_id = 23;
    optional bool coop_allowed = 4;
    optional uint32 max_coop_size = 5;
    optional uint32 max_boosts = 12;
    optional double minutes_per_token = 15 [default = 60];
    optional double chicken_run_cooldown_minutes = 18 [default = 180];
    optional double start_time = 17;
    optional double expiration_time = 6;
    optional double length_seconds = 7;
    optional double max_soul_eggs = 13;
    optional uint32 min_client_version = 14;
    optional bool leggacy = 19;
    optional bool cc_only = 22;
    repeated string default_shell_ids = 24;
    optional bool debug = 11;
    optional string key = 21;
    
    enum PlayerGrade {
        GRADE_UNSET = 0;
        GRADE_C = 1;
        GRADE_B = 2;
        GRADE_A = 3;
        GRADE_AA = 4;
        GRADE_AAA = 5;
    }
}

message ContractPlayerInfo {
    optional Contract.PlayerGrade grade = 1;
    optional double total_cxp = 2;
    optional double season_cxp = 13;
    optional double grade_score = 7;
    optional double target_grade_score = 9;
    optional double soul_power = 10;
    optional double target_soul_power = 8;
    optional double grade_progress = 12;
    repeated ContractEvaluation.PoorBehavior issues = 11;
    optional double issue_score = 14;
    
    optional Status status = 3;
    enum Status {
        UNKNOWN = 0;
        CALCULATING = 1;
        OUT_OF_DATE = 2;
        INCOMPLETE = 4;
        COMPLETE = 3;
    }
    
    optional double last_evaluation_time = 4;
    optional string last_evaluation_version = 5;
    repeated ContractEvaluation unread_evaluations = 6;
}

message ContractEvaluation {
    optional string contract_identifier = 40;
    optional string coop_identifier = 41;
    optional double cxp = 1;
    optional bool replay = 24;
    optional double cxp_change = 25;
    optional int32 grade_performance = 2;
    optional int32 old_league = 9;
    optional bool old_goals = 10;
    optional Contract.PlayerGrade grade = 3;
    optional double contribution_ratio = 4;
    optional double completion_percent = 5;
    optional double original_length = 11;
    optional uint32 coop_size = 18;
    optional bool solo = 26;
    optional double soul_power = 23;
    optional double last_contribution_time = 22;
    optional double completion_time = 6;
    optional uint32 chicken_runs_sent = 7;
    optional uint32 gift_tokens_sent = 8;
    optional uint32 gift_tokens_received = 15;
    optional double gift_token_value_sent = 28;
    optional double gift_token_value_received = 29;
    optional uint32 boost_token_allotment = 16;
    optional double buff_time_value = 17;
    optional double teamwork_score = 13;
    optional double other_bonuses = 14;
    optional bool counted_in_season = 20;
    optional string season_id = 21;
    optional uint32 time_cheats = 27;
    
    repeated PoorBehavior issues = 19;
    enum PoorBehavior {
        NONE = 0;
        LOW_CONTRIBUTION = 1;
        BAD_CONTRIBUTION = 2;
        DISHONORABLY_DISCHARGED = 3;
        POOR_TEAMWORK = 4;
        ABANDONED_COOP = 5;
        TIME_CHEAT = 6;
    }
    
    repeated string notes = 12;
    optional string version = 50;
    optional double evaluation_start_time = 51;
    
    optional Status status = 52;
    enum Status {
        UNKNOWN = 0;
        PENDING = 1;
        EVALUATING = 2;
        COMPLETE = 3;
    }
}

message ContractCitation {
    optional ContractEvaluation.PoorBehavior issue = 1;
    optional double timestamp = 2;
    optional Contract.PlayerGrade grade = 3;
}

message ContractEvaluationBatch {
    repeated Pair evals = 1;
    message Pair {
        optional string user_id = 1;
        optional ContractEvaluation cev = 2;
    }
}

message CoopCompletionSnapshot {
    repeated ContributorSnapshot contributors = 1;
    message ContributorSnapshot {
        optional double contribution = 1;
        optional double last_contribution_time = 6;
        optional bool finalized = 7;
        optional double soul_power = 2;
        optional string user_id = 3;
        optional uint32 tokens = 4;
        optional uint32 tokens_spent = 5;
    }
}

message BasicRequestInfo {
    optional string ei_user_id = 1;
    optional uint32 client_version = 2;
    optional string version = 3;
    optional string build = 4;
    optional string platform = 5;
    optional string country = 6;
    optional string language = 7;
    optional bool debug = 8;
}

message ContractSimConfig {
    repeated ContractGradeSimConfig grade_configs = 1;
    message ContractGradeSimConfig {
        optional Contract.PlayerGrade grade = 1;
        
        repeated GoalParams goal_params = 2;
        message GoalParams {
            optional double target_se = 1;
            optional double cps_mult = 2;
            optional double elr_mult = 7;
            optional double earnings_mult = 3;
            optional double time_efficacy = 4;
            optional double hab_capacity_mult = 5;
            optional double epic_research_budget = 6;
        }
    }
}

message ContractSimPoll {
    optional uint32 client_version = 1;
}

message ContractSimPollResponse {
    optional Contract contract_to_simulate = 1;
    optional ContractSimConfig sim_config = 2;
}

message ContractSimResultUpdate {
    optional string contract_id = 1;
    
    repeated GoalInfo goal_infos = 2;
    message GoalInfo {
        optional Contract.PlayerGrade grade = 1;
        optional uint32 goal_index = 2;
        optional double projected_eggs_laid = 3;
    }
}

message ContractsRequest {
    optional double soul_eggs = 1;
    optional uint32 client_version = 5;
    optional string user_id = 2;
}

message ContractsResponse {
    repeated Contract contracts = 1;
    optional string warning_message = 4;
    optional double total_eop = 5;
    optional double server_time = 2;
    optional uint32 max_eop = 3 [default = 1000];
}

message ContractCoopStatusRequest {
    optional BasicRequestInfo rinfo = 5;
    optional string contract_identifier = 1;
    optional string coop_identifier = 2;
    optional string user_id = 3;
    optional uint32 client_version = 4;
}

message FarmProductionParams {
    optional double farm_population = 1;
    optional double farm_capacity = 2;
    optional double elr = 3;
    optional double ihr = 4;
    optional double sr = 5;
    optional double delivered = 6;
}

message PlayerFarmInfo {
    optional uint32 client_version = 20;
    optional double soul_eggs = 1;
    optional uint64 eggs_of_prophecy = 2;
    optional uint32 permit_level = 3;
    optional bool hyperloop_station = 4;
    repeated uint32 egg_medal_level = 5;
    repeated Backup.ResearchItem epic_research = 6;
    optional Egg egg_type = 7;
    optional double cash_on_hand = 8;
    repeated uint32 habs = 9;
    repeated uint64 hab_population = 10;
    repeated uint64 hab_capacity = 21;
    repeated uint32 vehicles = 11;
    repeated uint32 train_length = 12;
    optional uint32 silos_owned = 13;
    repeated Backup.ResearchItem common_research = 14;
    repeated Backup.ActiveBoost active_boosts = 15;
    optional uint32 boost_tokens_on_hand = 16;
    repeated CompleteArtifact equipped_artifacts = 17;
    optional uint64 artifact_inventory_score = 18;
    optional ShellDB.FarmConfiguration farm_appearance = 19;
    optional double timestamp = 22;
}

message ContractCoopStatusResponse {
    optional ResponseStatus response_status = 19;
    enum ResponseStatus {
        NO_ERROR = 0;
        MISSING_USER = 1;
        MISSING_COOP_ID = 2;
        MISSING_CONTRACT_ID = 3;
        MEMBERSHIP_NOT_FOUND = 4;
        COOP_NOT_FOUND = 5;
        CONTRACT_NOT_FOUND = 6;
        INVALID_MEMBERSHIP = 7;
        NO_HTTP_RESPONSE = 500;
    }
    
    optional string contract_identifier = 1;
    optional double total_amount = 2;
    optional string coop_identifier = 3;
    optional Contract.PlayerGrade grade = 17;
    
    repeated ContributionInfo contributors = 4;
    message ContributionInfo {
        optional string uuid = 21;
        optional string user_id = 1;
        optional string user_name = 2;
        optional string contract_identifier = 19;
        optional double contribution_amount = 3;
        optional double contribution_rate = 6;
        optional double soul_power = 11;
        optional FarmProductionParams production_params = 15;
        optional PlayerFarmInfo farm_info = 18;
        optional int32 rank_change = 8;
        optional bool recently_active = 23;
        optional bool active = 4;
        optional bool cc_member = 24;
        optional bool leech = 16;
        optional bool finalized = 22;
        optional bool time_cheat_detected = 7;
        optional aux.Platform platform = 5;
        optional string push_id = 9;
        optional uint32 ban_votes = 10;
        optional bool autojoined = 17;
        optional uint32 boost_tokens = 12;
        optional uint32 boost_tokens_spent = 14;
        repeated CoopBuffState buff_history = 13;
        optional double chicken_run_cooldown = 20;
    }
    
    optional bool auto_generated = 8;
    optional bool public = 10;
    optional string creator_id = 9;
    optional double seconds_remaining = 5;
    optional double seconds_since_all_goals_achieved = 16;
    optional bool all_goals_achieved = 14;
    optional bool all_members_reporting = 6;
    optional double grace_period_seconds_remaining = 7;
    optional bool cleared_for_exit = 15;
    
    repeated CoopGift gifts = 11;
    message CoopGift {
        optional string user_id = 1;
        optional string user_name = 3;
        optional uint32 amount = 2;
        optional string tracking = 4;
    }
    
    repeated ChickenRun chicken_runs = 13;
    message ChickenRun {
        optional string user_id = 1;
        optional string user_name = 3;
        optional uint64 amount = 2;
    }
    
    optional double local_timestamp = 12;
    optional double last_sync = 18;
    
    enum MemberStatus {
        VALID = 0;
        KICKED_INACTIVE = 1;
        KICKED_PRIVATE = 2;
        KICKED_CHEATS = 3;
        KICKED_LEECH = 4;
    }
    
    enum Status {
        UNKNOWN = 0;
        LOBBY = 1;
        ACTIVE = 2;
        COMPLETE = 3;
        FINALIZED = 4;
    }
}

message LocalContract {
    optional Contract contract = 1;
    optional string coop_identifier = 2;
    optional bool accepted = 7;
    optional double time_accepted = 3;
    optional bool cancelled = 4;
    optional bool new = 8;
    optional double coop_shared_end_time = 5;
    optional double coop_simulation_end_time = 22;
    optional double coop_grace_period_end_time = 9;
    optional bool coop_contribution_finalized = 10;
    optional double coop_last_uploaded_contribution = 11;
    optional string coop_user_id = 13;
    optional bool coop_share_farm = 17;
    optional double last_amount_when_reward_given = 6;
    optional uint32 num_goals_achieved = 14;
    optional uint32 boosts_used = 12;
    optional bool points_replay = 20;
    optional uint32 league = 15;
    optional Contract.PlayerGrade grade = 18;
    optional double last_nag_time = 16;
    optional ContractEvaluation evaluation = 19;
    repeated string reported_uuids = 21;
}

message MyContracts {
    repeated string contract_ids_seen = 3;
    repeated LocalContract contracts = 1;
    repeated LocalContract archive = 2;
    repeated ContractCoopStatusResponse current_coop_statuses = 4;
    optional ContractPlayerInfo last_cpi = 5;
    optional bool initial_grade_revealed = 6;
    optional double last_grade_progress_shown = 7;
    optional bool show_advanced_evaluations = 8;
}

message QueryCoopRequest {
    optional BasicRequestInfo rinfo = 5;
    optional string contract_identifier = 1;
    optional string coop_identifier = 2;
    optional uint32 league = 4;
    optional Contract.PlayerGrade grade = 6;
    optional uint32 client_version = 3;
}

message QueryCoopResponse {
    optional bool exists = 1;
    optional bool full = 2;
    optional bool expired = 5;
    optional bool different_league = 4;
    optional bool different_grade = 6;
    optional bool cc_only = 7;
    optional bool banned = 3;
}

message CreateCoopRequest {
    optional BasicRequestInfo rinfo = 10;
    optional string contract_identifier = 1;
    optional string coop_identifier = 2;
    optional bool public = 13;
    optional bool cc_only = 14;
    optional bool allow_all_grades = 16;
    optional double seconds_remaining = 3;
    optional string user_id = 4;
    optional string user_name = 5;
    optional double soul_power = 8;
    optional double eop = 11;
    optional uint32 league = 9;
    optional Contract.PlayerGrade grade = 12;
    optional bool points_replay = 15;
    optional aux.Platform platform = 6;
    optional uint32 client_version = 7;
}

message CreateCoopResponse {
    optional bool success = 1;
    optional string message = 2;
}

message JoinCoopRequest {
    optional BasicRequestInfo rinfo = 10;
    optional string contract_identifier = 1;
    optional string coop_identifier = 2;
    optional string user_id = 3;
    optional string user_name = 4;
    optional double soul_power = 8;
    optional double eop = 12;
    optional uint32 league = 9;
    optional Contract.PlayerGrade grade = 13;
    optional bool points_replay = 14;
    optional aux.Platform platform = 5;
    optional double seconds_remaining = 11;
    optional uint32 client_version = 7;
}

message JoinCoopResponse {
    optional bool success = 1;
    optional string message = 2;
    optional bool banned = 4;
    optional string coop_identifier = 5;
    optional double seconds_remaining = 3;
    optional double match_percent = 6;
    optional uint32 num_members = 7;
    optional ContractCoopStatusResponse.Status status = 8;
    optional Contract.PlayerGrade grade = 9;
    optional bool can_start = 10;
}

message AutoJoinCoopRequest {
    optional BasicRequestInfo rinfo = 9;
    optional string contract_identifier = 1;
    optional string user_id = 2;
    optional string user_name = 3;
    optional double soul_power = 4;
    optional double eop = 10;
    optional uint32 league = 8;
    optional Contract.PlayerGrade grade = 12;
    optional bool points_replay = 14;
    optional double seconds_remaining = 5;
    optional aux.Platform platform = 6;
    optional uint32 client_version = 7;
}

message UpdateCoopPermissionsRequest {
    optional BasicRequestInfo rinfo = 6;
    optional string contract_identifier = 1;
    optional string coop_identifier = 2;
    optional string requesting_user_id = 3;
    optional bool public = 4;
    optional uint32 client_version = 5;
}

message UpdateCoopPermissionsResponse {
    optional bool success = 1;
    optional string message = 2;
}

message LeaveCoopRequest {
    optional BasicRequestInfo rinfo = 8;
    optional string contract_identifier = 1;
    optional string coop_identifier = 2;
    optional string player_identifier = 3;
    optional uint32 client_version = 7;
}

message GiftPlayerCoopRequest {
    optional BasicRequestInfo rinfo = 8;
    optional string contract_identifier = 1;
    optional string coop_identifier = 2;
    optional string player_identifier = 3;
    optional string requesting_user_id = 4;
    optional string requesting_user_name = 6;
    optional uint32 amount = 5;
    optional uint32 client_version = 7;
}

message SendChickenRunCoopRequest {
    optional BasicRequestInfo rinfo = 8;
    optional string contract_identifier = 1;
    optional string coop_identifier = 2;
    optional string player_identifier = 3;
    optional string requesting_user_id = 4;
    optional string requesting_user_name = 6;
    optional uint64 farm_pop = 5;
    optional uint32 client_version = 7;
}

message ReportPlayerCoopRequest {
    optional BasicRequestInfo rinfo = 1;
    optional string contract_identifier = 2;
    optional string coop_identifier = 3;
    optional string user_id = 4;
    
    optional Reason reason = 5;
    enum Reason {
        UNKNOWN = 0;
        OFFENSIVE_NAME = 1;
        CHEATING = 2;
        LEECHING = 3;
    }
}

message KickPlayerCoopRequest {
    optional BasicRequestInfo rinfo = 8;
    optional string contract_identifier = 1;
    optional string coop_identifier = 2;
    optional string player_identifier = 3;
    optional string requesting_user_id = 4;
    
    optional Reason reason = 9;
    enum Reason {
        INVALID = 0;
        CHEATER = 1;
        IDLE = 2;
        LEECH = 3;
        PRIVATE = 4;
    }
    
    optional uint32 client_version = 7;
}

message ContractCoopStatusUpdateRequest {
    optional BasicRequestInfo rinfo = 12;
    optional string user_id = 1;
    optional string contract_identifier = 2;
    optional string coop_identifier = 3;
    optional string push_user_id = 8;
    optional double amount = 4;
    optional double rate = 5;
    optional uint32 time_cheats_detected = 6;
    optional double soul_power = 7;
    optional uint32 eop = 15;
    optional uint32 boost_tokens = 9;
    optional uint32 boost_tokens_spent = 13;
    optional bool hide_cc_status = 17;
    optional FarmProductionParams production_params = 14;
    optional PlayerFarmInfo farm_info = 16;
    optional double egg_laying_rate_buff = 10 [default = 1];
    optional double earnings_buff = 11 [default = 1];
}

message ContractCoopStatusUpdateResponse {
    optional bool finalized = 1;
    optional bool exists = 2;
    optional ContractCoopStatusResponse.MemberStatus status = 3;
}

message CoopBuffState {
    optional double egg_laying_rate = 1 [default = 1];
    optional double earnings = 2 [default = 1];
    optional double server_timestamp = 3;
}

message CoopBuffHistory {
    repeated CoopBuffState history = 1;
}

message CoopChickenRunEntry {
    optional string user_id = 1;
    optional double server_timestamp = 2;
}

message CoopLastChickenRunTimes {
    repeated CoopChickenRunEntry entries = 3;
}

message LeaderboardAnalysis {
    repeated Chunk chunks = 1;
    message Chunk {
        optional uint32 start_index = 1;
        optional uint32 end_index = 2;
        optional double high_score = 3;
        optional double low_score = 4;
        optional string start_cursor = 5;
        optional string end_cursor = 6;
    }
    
    optional uint32 count = 2;
    optional double high_score = 3;
    optional double low_score = 4;
    optional string cursor = 5;
}

message LeaderboardInfo {
    repeated Season seasons = 1;
    message Season {
        optional string scope = 1;
        optional string name = 2;
    }
    
    optional string all_time_scope = 2;
}

message LeaderboardRequest {
    optional BasicRequestInfo rinfo = 1;
    optional string scope = 2;
    optional Contract.PlayerGrade grade = 3;
}

message LeaderboardResponse {
    optional string scope = 1;
    optional Contract.PlayerGrade grade = 2;
    
    repeated Entry top_entries = 3;
    message Entry {
        optional uint32 rank = 1;
        optional string alias = 2;
        optional double score = 3;
    }
    
    optional uint32 count = 4;
    optional uint32 rank = 5;
    optional double score = 6;
}

message ContractsArchive {
    repeated LocalContract archive = 1;
}

message ContractAction {
    optional string user_id = 1;
    optional string action_name = 2;
    optional double approx_time = 3;
    optional string dest_user_id = 4;
    optional string contract_id = 5;
    optional string coop_id = 6;
    optional bool autojoin = 7;
    optional uint32 grade = 8;
    optional bool replay = 9;
    optional bool points_replay = 10;
    optional uint32 reward_type = 11;
    optional string reward_subtype = 12;
    optional double reward_amount = 13;
    optional uint32 goal_index = 14;
    optional string boost_id = 15;
    optional uint32 tokens = 16;
    optional uint32 kick_reason = 17;
    optional bool public = 18;
    optional bool cc_only = 19;
}

message UserDataInfoRequest {
    optional BasicRequestInfo rinfo = 4;
    optional string user_id = 1;
    optional string device_id = 2;
    optional uint64 backup_checksum = 3;
}

message UserDataInfoResponse {
    optional uint64 backup_checksum = 1;
    optional double backup_total_cash = 2;
    repeated string coop_memberships = 3;
}

message ClearAllUserDataRequest {
    optional BasicRequestInfo rinfo = 4;
    optional string user_id = 1;
    optional string device_id = 2;
    optional uint64 backup_checksum = 3;
}

message ServerGift {
    optional string user_id = 1;
    optional RewardType reward_type = 3;
    optional string reward_sub_type = 4;
    optional double reward_amount = 5;
}

message LiveConfig {
    optional string config_id = 1;
    
    optional BoostsConfig boosts_config = 2;
    message BoostsConfig {
        repeated ItemConfig item_configs = 1;
        message ItemConfig {
            optional string boost_id = 1;
            optional uint32 price = 2;
            optional uint32 token_price = 3;
            optional double se_required = 4;
        }
        
        optional double cash_boost_cooloff_time = 2;
    }
    
    optional GiftConfig gift_config = 3;
    message GiftConfig {
        repeated GiftValueConfig gift_configs = 9;
        message GiftValueConfig {
            optional string gift_id = 1;
            optional double amount = 4;
            optional double rand_min = 2;
            optional double rand_max = 3;
            optional double video_min = 5;
            optional double video_max = 6;
        }
        
        optional double gift_mu_min_spent = 10;
        optional double gift_mu_max_spent = 11;
        optional double gift_mu_overall_mult = 12;
        
        optional GiftMuConfig random_gift_mu_config = 15;
        message GiftMuConfig {
            optional double min_spent = 1;
            optional double max_spent = 2;
            optional double overall_mult = 3;
        }
        
        optional GiftMuConfig video_gift_mu_config = 16;
        optional double package_interval = 1;
        optional double video_offer_interval = 2;
        optional double video_offer_interval_contract = 3;
        optional double video_offer_interval_piggy_full = 4;
        optional double video_offer_interval_piggy_extra_full = 5;
        optional bool video_reset_on_idle = 14;
        optional double package_interval_contract = 6;
        optional double package_interval_piggy_full = 7;
        optional double package_interval_piggy_extra_full = 8;
        optional bool package_reset_on_idle = 13;
    }
    
    optional MiscConfig misc_config = 4;
    message MiscConfig {
        optional bool ask_to_track = 1;
        optional double ask_to_track_min_soul_eggs = 2;
        optional string ask_to_track_message = 3;
        optional bool ask_to_track_show_pre_dialog = 4;
        optional bool ask_to_track_after_privacy = 5;
        optional double chicken_run_boost_percentage = 6;
        optional uint32 shells_intro_tickets = 7;
        optional uint32 shells_max_free_chicken_configs = 8;
        optional uint32 shells_intro_alert_threshold = 9;
        optional uint32 shells_lighting_controls_price = 14 [default = 175];
        optional double contracts_expert_league_min_soul_power = 10;
        optional double new_player_event_duration = 11;
        optional bool contracts_club_available = 12;
        optional bool contracts_beta = 13;
    }
}

message InGameMail {
    optional string id = 1;
    optional string title = 2;
    optional string date = 8;
    optional string message = 3;
    optional string action = 4;
    optional string url = 5;
    optional UILocation app_link = 14;
    optional string app_link_extra = 15;
    optional DLCItem image = 16;
    optional double image_width = 21;
    optional double image_height = 22;
    optional uint32 platform = 7;
    repeated string builds = 9;
    optional uint32 min_client_version = 10;
    optional uint32 max_client_version = 12;
    optional double min_soul_eggs = 11;
    optional double min_mystical_bonus = 13;
    optional UserType user_type = 17;
    optional uint32 min_piggy_breaks = 20;
    optional double gold_tip = 6;
    optional bool tip = 23;
    optional uint32 priority = 27;
    optional double min_days_since_last_tip = 24;
    optional uint32 max_retries = 25;
    optional double days_until_retry = 26;
    optional string category = 28;
}

message MailDB {
    repeated InGameMail mail = 1;
    optional bytes tips_db_data = 2;
    optional string tips_checksum = 3;
}

message TipsDB {
    repeated InGameMail tips = 1;
}

message MailState {
    repeated string read_mail_ids = 1;
    
    repeated TipState tips_states = 2;
    message TipState {
        optional string id = 1;
        optional uint32 reads = 2;
        optional double time_read = 3;
    }
    
    optional string tips_checksum = 3;
}

message PeriodicalsResponse {
    optional SalesInfo sales = 1;
    optional EggIncCurrentEvents events = 2;
    optional ContractsResponse contracts = 3;
    repeated ContractEvaluation evaluations = 8;
    repeated ServerGift gifts = 4;
    repeated CompleteMissionResponse artifact_cases = 9;
    optional LiveConfig live_config = 5;
    optional MailDB mail_bag = 6;
    optional ContractPlayerInfo contract_player_info = 7;
}

message GetPeriodicalsRequest {
    optional BasicRequestInfo rinfo = 12;
    optional string user_id = 1;
    optional bool piggy_full = 2;
    optional bool piggy_found_full = 3;
    optional double seconds_full_realtime = 4;
    optional double seconds_full_gametime = 5;
    optional uint32 lost_increments = 7;
    optional double soul_eggs = 8;
    optional double mystical_earnings_mult = 13;
    optional uint32 eop = 14;
    optional bool contracts_unlocked = 15;
    optional bool artifacts_unlocked = 16;
    optional uint32 current_client_version = 10;
    optional bool debug = 11;
}

message ConfigRequest {
    optional BasicRequestInfo rinfo = 1;
    optional double soul_eggs = 2;
    optional bool contracts_unlocked = 5;
    optional bool artifacts_unlocked = 3;
    optional bool fuel_tank_unlocked = 4;
    optional bool pro_permit = 6;
    optional bool ultra = 7;
    optional string tips_checksum = 8;
}

message ConfigResponse {
    optional LiveConfig live_config = 1;
    optional MailDB mail_bag = 2;
    optional DLCCatalog dlc_catalog = 3;
}

message AdAttributionRawData {
    optional string device_ad_id = 1;
    optional string user_id = 4;
    optional string ad_network = 2;
    optional string json_data = 3;
}

message AdAttributionRow {
    optional string user_id = 1;
    optional string ad_id = 2;
    optional string ad_network = 3;
    optional string campaign = 4;
    optional string keyword = 5;
    optional string extra = 6;
    optional float click_date = 7;
    optional float download_date = 8;
    optional float approx_time = 9;
}

message AdAttributionInfo {
    optional string device_ad_id = 1;
    optional string network_name = 2;
    optional bool attribution = 3;
    optional string org_name = 4;
    optional string org_id = 5;
    optional string campaign_name = 6;
    optional string campaign_id = 7;
    optional string click_date = 8;
    optional string conversion_date = 9;
    optional string conversion_type = 10;
    optional string geo = 11;
    optional string adgroup_name = 12;
    optional string adgroup_id = 13;
    optional string keyword = 14;
    optional string keyword_id = 15;
    optional string keyword_extra = 16;
    optional string creativeset_name = 17;
    optional string creativeset_id = 18;
}

message ArtifactsClientInfo {
    optional double mission_capacity_mult = 1;
    optional double mission_duration_mult = 2;
    optional double mission_ftl_duration_mult = 4;
    
    repeated LaunchCount launch_counts = 3;
    message LaunchCount {
        optional MissionInfo.Spaceship ship = 1;
        optional uint32 num_launches = 2;
        optional double launch_points = 3;
    }
}

message MissionInfo {
    optional Spaceship ship = 1;
    enum Spaceship {
        CHICKEN_ONE = 0;
        CHICKEN_NINE = 1;
        CHICKEN_HEAVY = 2;
        BCR = 3;
        MILLENIUM_CHICKEN = 4;
        CORELLIHEN_CORVETTE = 5;
        GALEGGTICA = 6;
        CHICKFIANT = 7;
        VOYEGGER = 8;
        HENERPRISE = 9;
    }
    
    optional Status status = 2;
    enum Status {
        FUELING = 0;
        PREPARE_TO_LAUNCH = 5;
        EXPLORING = 10;
        RETURNED = 15;
        ANALYZING = 16;
        COMPLETE = 20;
        ARCHIVED = 25;
    }
    
    optional DurationType duration_type = 3;
    enum DurationType {
        SHORT = 0;
        LONG = 1;
        EPIC = 2;
        TUTORIAL = 3;
    }
    
    repeated Fuel fuel = 4;
    message Fuel {
        optional Egg egg = 1;
        optional double amount = 2;
    }
    
    optional uint32 level = 12;
    optional double duration_seconds = 5;
    optional uint32 capacity = 9;
    optional double quality_bump = 11;
    optional ArtifactSpec.Name target_artifact = 13;
    optional double seconds_remaining = 6;
    optional double start_time_derived = 8;
    optional string mission_log = 10;
    optional string identifier = 7;
}

message ArtifactSpec {
    optional Name name = 1;
    enum Name {
        LUNAR_TOTEM = 0;
        NEODYMIUM_MEDALLION = 3;
        BEAK_OF_MIDAS = 4;
        LIGHT_OF_EGGENDIL = 5;
        DEMETERS_NECKLACE = 6;
        VIAL_MARTIAN_DUST = 7;
        ORNATE_GUSSET = 8;
        THE_CHALICE = 9;
        BOOK_OF_BASAN = 10;
        PHOENIX_FEATHER = 11;
        TUNGSTEN_ANKH = 12;
        AURELIAN_BROOCH = 21;
        CARVED_RAINSTICK = 22;
        PUZZLE_CUBE = 23;
        QUANTUM_METRONOME = 24;
        SHIP_IN_A_BOTTLE = 25;
        TACHYON_DEFLECTOR = 26;
        INTERSTELLAR_COMPASS = 27;
        DILITHIUM_MONOCLE = 28;
        TITANIUM_ACTUATOR = 29;
        MERCURYS_LENS = 30;
        TACHYON_STONE = 1;
        DILITHIUM_STONE = 31;
        SHELL_STONE = 32;
        LUNAR_STONE = 33;
        SOUL_STONE = 34;
        PROPHECY_STONE = 39;
        QUANTUM_STONE = 36;
        TERRA_STONE = 37;
        LIFE_STONE = 38;
        CLARITY_STONE = 40;
        EXTRATERRESTRIAL_ALUMINUM = 13;
        ANCIENT_TUNGSTEN = 14;
        SPACE_ROCKS = 15;
        ALIEN_WOOD = 16;
        GOLD_METEORITE = 17;
        TAU_CETI_GEODE = 18;
        CENTAURIAN_STEEL = 19;
        ERIDANI_FEATHER = 20;
        DRONE_PARTS = 35;
        CELESTIAL_BRONZE = 41;
        LALANDE_HIDE = 42;
        SOLAR_TITANIUM = 43;
        TACHYON_STONE_FRAGMENT = 2;
        DILITHIUM_STONE_FRAGMENT = 44;
        SHELL_STONE_FRAGMENT = 45;
        LUNAR_STONE_FRAGMENT = 46;
        SOUL_STONE_FRAGMENT = 47;
        PROPHECY_STONE_FRAGMENT = 48;
        QUANTUM_STONE_FRAGMENT = 49;
        TERRA_STONE_FRAGMENT = 50;
        LIFE_STONE_FRAGMENT = 51;
        CLARITY_STONE_FRAGMENT = 52;
        UNKNOWN = 10000;
    }
    
    optional Level level = 2;
    enum Level {
        INFERIOR = 0;
        LESSER = 1;
        NORMAL = 2;
        GREATER = 3;
        SUPERIOR = 4;
    }
    
    optional Rarity rarity = 3;
    enum Rarity {
        COMMON = 0;
        RARE = 1;
        EPIC = 2;
        LEGENDARY = 3;
    }
    
    optional Egg egg = 4;
    
    enum Type {
        ARTIFACT = 0;
        STONE = 1;
        INGREDIENT = 2;
        STONE_INGREDIENT = 3;
    }
}

message CompleteArtifact {
    optional ArtifactSpec spec = 1;
    repeated ArtifactSpec stones = 2;
}

message ArtifactInventoryItem {
    optional uint64 item_id = 1;
    optional CompleteArtifact artifact = 2;
    optional double quantity = 3;
    optional string server_id = 4;
}

message InventorySlot {
    optional bool occupied = 1;
    optional uint32 item_id = 2;
}

message ArtifactsConfigurationRequest {
    optional BasicRequestInfo rinfo = 2;
    optional uint32 client_version = 1;
}

message ArtifactsConfigurationResponse {
    repeated MissionParameters mission_parameters = 1;
    message MissionParameters {
        optional MissionInfo.Spaceship ship = 1;
        
        repeated Duration durations = 3;
        message Duration {
            optional MissionInfo.DurationType duration_type = 1;
            optional double seconds = 2;
            optional float quality = 3;
            optional float min_quality = 4;
            optional float max_quality = 5;
            optional uint32 capacity = 6;
            optional uint32 level_capacity_bump = 7;
            optional float level_quality_bump = 8;
        }
        
        repeated uint32 level_mission_requirements = 4;
        optional uint32 capacity_DEPRECATED = 2;
    }
    
    repeated ArtifactParameters artifact_parameters = 2;
    message ArtifactParameters {
        optional ArtifactSpec spec = 1;
        optional double base_quality = 2;
        optional double odds_multiplier = 4;
        optional double value = 3;
        optional double crafting_price = 5;
        optional double crafting_price_low = 6;
        optional uint32 crafting_price_domain = 7;
        optional double crafting_price_curve = 8;
        optional uint64 crafting_xp = 9;
    }
    
    repeated CraftingLevelInfo crafting_level_infos = 3;
    message CraftingLevelInfo {
        optional double xp_required = 1;
        optional float rarity_mult = 2;
    }
}

message MissionRequest {
    optional BasicRequestInfo rinfo = 4;
    optional uint32 client_version = 1;
    optional string ei_user_id = 3;
    optional MissionInfo info = 2;
    optional ArtifactsClientInfo client_info = 5;
}

message MissionResponse {
    optional bool success = 1;
    optional MissionInfo info = 2;
}

message CompleteMissionResponse {
    optional bool success = 1;
    optional MissionInfo info = 2;
    
    repeated SecureArtifactSpec artifacts = 3;
    message SecureArtifactSpec {
        optional ArtifactSpec spec = 1;
        optional string server_id = 2;
    }
    
    repeated Reward other_rewards = 4;
    optional string ei_user_id = 5;
}

message CollectContractArtifactRewardsRequest {
    optional BasicRequestInfo rinfo = 1;
    optional string contract_identifier = 2;
    optional uint32 league = 5;
    optional Contract.PlayerGrade grade = 6;
    optional uint32 goal_index = 3;
    optional MissionInfo.Spaceship best_ship = 4;
}

message CraftArtifactRequest {
    optional BasicRequestInfo rinfo = 5;
    optional string ei_user_id = 1;
    optional ArtifactSpec spec = 2;
    optional uint64 item_id = 3;
    optional double gold_price_paid = 6;
    optional uint32 crafting_count = 7;
    optional double crafting_xp = 8;
    repeated ArtifactInventoryItem ingredients = 4;
}

message CraftArtifactResponse {
    optional uint64 item_id = 1;
    optional string ei_user_id = 5;
    optional ArtifactSpec.Rarity rarity_achieved = 2 [default = COMMON];
    optional string server_id = 3;
}

message ConsumeArtifactRequest {
    optional BasicRequestInfo rinfo = 4;
    optional string ei_user_id = 3;
    optional ArtifactSpec spec = 1;
    optional string artifact_server_id = 5;
    optional uint64 original_item_id = 2;
    repeated string additional_server_ids = 7;
    repeated uint64 additional_item_ids = 8;
    optional uint32 quantity = 6;
}

message ConsumeArtifactResponse {
    optional bool success = 1;
    optional uint64 original_item_id = 2;
    repeated uint64 additional_item_ids = 6;
    repeated ArtifactSpec byproducts = 3;
    repeated Reward other_rewards = 4;
    optional string ei_user_id = 5;
}

message AuthenticateArtifactResponse {
    optional bool success = 1;
    optional uint64 original_item_id = 2;
    optional bool demote = 3;
    optional bool delete = 4;
    optional string ei_user_id = 5;
}

message SetArtifactRequest {
    optional BasicRequestInfo rinfo = 1;
    optional ArtifactInventoryItem artifact = 2;
    repeated ArtifactSpec stones = 3;
    optional double gold_price_paid = 4;
}

message SetArtifactResponse {
    optional bool success = 1;
    optional uint64 original_item_id = 2;
    optional string ei_user_id = 5;
}

message ArtifactsDB {
    repeated ArtifactInventoryItem inventory_items = 1;
    optional uint64 item_sequence = 2;
    repeated InventorySlot inventory_slots = 3;
    
    repeated ActiveArtifactSlot active_artifacts_DEPRECATED = 7;
    message ActiveArtifactSlot {
        optional bool occupied = 1;
        optional uint64 item_id = 2;
    }
    
    repeated ActiveArtifactSet active_artifact_sets = 11;
    message ActiveArtifactSet {
        repeated ActiveArtifactSlot slots = 1;
        optional uint32 uid = 2;
    }
    
    repeated ActiveArtifactSet saved_artifact_sets = 13;
    
    repeated CraftableArtifact artifact_status = 12;
    message CraftableArtifact {
        optional ArtifactSpec spec = 1;
        optional bool discovered = 6;
        optional bool craftable = 4;
        optional bool recipe_discovered = 5;
        optional bool seen = 2;
        optional uint32 count = 3;
    }
    
    repeated MissionInfo mission_infos = 4;
    repeated MissionInfo mission_archive = 5;
    repeated ArtifactSpec discovered_artifacts_DEPRECATED = 8;
    repeated CraftableArtifact craftable_artifacts_DEPRECATED = 9;
    repeated CraftableArtifact crafting_counts_DEPRECATED = 10;
}

message AuthenticatedMessage {
    optional bytes message = 1;
    optional uint32 version = 3;
    optional string code = 2;
    optional bool compressed = 4;
    optional uint32 original_size = 5;
}

message LogCompleteMissionPayload {
    optional MissionRequest req = 1;
    optional CompleteMissionResponse res = 2;
}

message LogCraftArtifactPayload {
    optional CraftArtifactRequest req = 1;
    optional CraftArtifactResponse res = 2;
}

message LogConsumeArtifactPayload {
    optional ConsumeArtifactRequest req = 1;
    optional ConsumeArtifactResponse res = 2;
}

message LogSetArtifactPayload {
    optional SetArtifactRequest req = 1;
    optional SetArtifactResponse res = 2;
}

message AccountTransferPayload {
    optional string from_id = 1;
    optional string to_ei_user_id = 2;
}

message SaveBackupResponse {
    optional bool success = 1;
    optional uint32 error_code = 2;
    optional string message = 3;
    optional Backup existing_backup = 4;
    
    enum ErrorCodes {
        NO_ERROR = 0;
        USER_NOT_FOUND = 1;
        COULD_NOT_OVERWRITE = 2;
        BACKUP_OFFERED = 3;
        BAD_USER_ID = 4;
    }
}

message CleanAccountRequest {
    optional string ei_user_id_to_keep = 1;
    optional string game_services_id = 2;
}

message ReturnEDTPayload {
    optional string ei_user_id = 1;
}

message DLCItem {
    optional string name = 1;
    optional string directory = 2;
    optional string ext = 3;
    optional bool compressed = 6;
    optional uint64 original_size = 7;
    optional string url = 4;
    optional string checksum = 5;
}

message ShellSpec {
    optional string identifier = 1;
    
    optional ShellPiece primary_piece = 12;
    message ShellPiece {
        optional AssetType asset_type = 1;
        optional DLCItem dlc = 2;
    }
    
    repeated ShellPiece pieces = 11;
    repeated DLCItem alt_assets = 18;
    optional string name = 3;
    optional string set_identifier = 13;
    optional bool modified_geometry = 19;
    optional uint32 price = 4;
    optional uint32 required_eop = 5;
    optional double required_soul_eggs = 6;
    optional string required_parent_shell = 20;
    optional bool is_new = 14;
    optional bool expires = 15;
    optional double seconds_until_available = 17;
    optional double seconds_remaining = 16;
    optional uint64 popularity = 21;
    optional bool default_appearance = 8;
    
    enum AssetType {
        COOP = 1;
        SHACK = 2;
        SUPER_SHACK = 3;
        SHORT_HOUSE = 4;
        THE_STANDARD = 5;
        LONG_HOUSE = 6;
        DOUBLE_DECKER = 7;
        WAREHOUSE = 8;
        CENTER = 9;
        BUNKER = 10;
        EGGKEA = 11;
        HAB_1K = 12;
        HANGAR = 13;
        TOWER = 14;
        HAB_10K = 15;
        EGGTOPIA = 16;
        MONOLITH = 17;
        PLANET_PORTAL = 18;
        CHICKEN_UNIVERSE = 19;
        SILO_0_SMALL = 50;
        SILO_0_MED = 51;
        SILO_0_LARGE = 52;
        SILO_1_SMALL = 53;
        SILO_1_MED = 54;
        SILO_1_LARGE = 55;
        SILO_ALL = 59;
        MAILBOX = 70;
        TROPHY_CASE = 71;
        GROUND = 72;
        HARDSCAPE = 73;
        HYPERLOOP = 74;
        DEPOT_1 = 100;
        DEPOT_2 = 101;
        DEPOT_3 = 102;
        DEPOT_4 = 103;
        DEPOT_5 = 104;
        DEPOT_6 = 105;
        DEPOT_7 = 106;
        LAB_1 = 110;
        LAB_2 = 111;
        LAB_3 = 112;
        LAB_4 = 113;
        LAB_5 = 114;
        LAB_6 = 115;
        HATCHERY_EDIBLE = 120;
        HATCHERY_SUPERFOOD = 121;
        HATCHERY_MEDICAL = 122;
        HATCHERY_ROCKET_FUEL = 123;
        HATCHERY_SUPERMATERIAL = 124;
        HATCHERY_FUSION = 125;
        HATCHERY_QUANTUM = 126;
        HATCHERY_IMMORTALITY = 127;
        HATCHERY_TACHYON = 128;
        HATCHERY_GRAVITON = 129;
        HATCHERY_DILITHIUM = 130;
        HATCHERY_PRODIGY = 131;
        HATCHERY_TERRAFORM = 132;
        HATCHERY_ANTIMATTER = 133;
        HATCHERY_DARK_MATTER = 134;
        HATCHERY_AI = 135;
        HATCHERY_NEBULA = 136;
        HATCHERY_UNIVERSE = 137;
        HATCHERY_ENLIGHTENMENT = 138;
        HATCHERY_CHOCOLATE = 139;
        HATCHERY_EASTER = 140;
        HATCHERY_WATERBALLOON = 141;
        HATCHERY_FIREWORK = 142;
        HATCHERY_PUMPKIN = 143;
        HOA_1 = 170;
        HOA_2 = 171;
        HOA_3 = 172;
        MISSION_CONTROL_1 = 180;
        MISSION_CONTROL_2 = 181;
        MISSION_CONTROL_3 = 182;
        FUEL_TANK_1 = 200;
        FUEL_TANK_2 = 201;
        FUEL_TANK_3 = 202;
        FUEL_TANK_4 = 203;
        HATCHERY_GRAVITON_TOP = 500;
        HATCHERY_NEBULA_MIDDLE = 501;
        HATCHERY_NEBULA_TOP = 502;
        HATCHERY_DARK_MATTER_RING_1 = 505;
        HATCHERY_DARK_MATTER_RING_2 = 506;
        HATCHERY_DARK_MATTER_RING_3 = 507;
        HATCHERY_AI_TOP_1 = 510;
        HATCHERY_AI_TOP_2 = 511;
        HATCHERY_AI_TOP_3 = 512;
        HATCHERY_AI_TOP_4 = 513;
        HATCHERY_UNIVERSE_PROBE = 515;
        HATCHERY_UNIVERSE_BOLT = 516;
        HATCHERY_ENLIGHTENMENT_ORB = 520;
        HYPERLOOP_TRACK = 570;
        MAILBOX_FULL = 600;
        CHICKEN = 1000;
        HAT = 1010;
        UNKNOWN = 9999;
    }
}

message ShellSetSpec {
    optional string identifier = 1;
    optional string name = 2;
    optional uint32 price = 3;
    optional double price_mult_DEPRECATED = 8 [default = 1];
    optional double discount = 17;
    optional uint32 required_eop = 4;
    optional double required_soul_eggs = 5;
    optional string required_parent_set = 20;
    optional bool is_new = 9;
    optional bool expires = 10;
    optional double seconds_until_available = 18;
    optional double seconds_remaining = 11;
    optional uint64 popularity = 21;
    optional bool decorator = 14;
    optional bool modified_geometry = 13;
    optional bool element_set = 7;
    optional string hex_base_color = 16;
    
    repeated VariationSpec variations = 15;
    message VariationSpec {
        optional string identifier = 1;
        optional string hex_color = 2;
        optional uint32 price = 3;
        optional int32 sort_priority = 6;
        optional bool default_appearance = 4;
        optional bool custom_appearance = 5;
    }
    
    optional DLCItem icon = 19;
    optional bool default_appearance = 6;
    optional bool custom_appearance = 12;
}

message ShellObjectSpec {
    optional string identifier = 1;
    optional string name = 2;
    optional ShellSpec.AssetType asset_type = 3;
    optional string object_class = 14;
    repeated string icon_colors = 15;
    optional uint32 price = 4;
    optional uint32 required_eop = 5;
    optional double required_soul_eggs = 6;
    optional bool is_new = 10;
    optional bool expires = 11;
    optional double seconds_until_available = 18;
    optional double seconds_remaining = 12;
    optional uint64 popularity = 19;
    repeated double metadata = 7;
    optional bool no_hats = 13;
    
    optional ChickenAnimation chicken_animation = 16;
    enum ChickenAnimation {
        STANDARD_RUN = 0;
        SLOWMO = 7;
        WOBBLE = 1;
        WOBBLE_LEAN = 5;
        SMOOTH = 2;
        SMOOTH_LEAN = 6;
        HOVER = 3;
        SIDEWAYS_SMOOTH = 4;
        SIDEWAYS_LEAN = 8;
    }
    
    optional int32 sort_priority = 17;
    
    repeated LODPiece pieces = 8;
    message LODPiece {
        optional DLCItem dlc = 1;
        optional uint32 lod = 2;
    }
    
    optional bool default_appearance = 9;
}

message ShellGroupSpec {
    optional string identifier = 1;
    optional string name = 2;
    optional ShellSpec.AssetType asset_type = 5;
    repeated string member_ids = 3;
    optional double price_mult_DEPRECATED = 4;
}

message DLCCatalog {
    repeated DLCItem items = 1;
    repeated ShellSpec shells = 2;
    repeated ShellSetSpec shell_sets = 3;
    repeated ShellSetSpec decorators = 6;
    repeated ShellObjectSpec shell_objects = 4;
    repeated ShellGroupSpec shell_groups = 5;
}

message ShellDB {
    repeated ShellStatus shell_inventory = 1;
    message ShellStatus {
        optional string identifier = 1;
        optional bool owned = 2;
    }
    
    repeated ShellElementStatus shell_element_inventory = 5;
    message ShellElementStatus {
        optional FarmElement element = 1;
        optional string set_identifier = 2;
    }
    
    repeated ShellSetVariationStatus shell_variation_inventory = 8;
    message ShellSetVariationStatus {
        optional string set_identifier = 1;
        repeated string owned_variations = 2;
    }
    
    repeated ShellStatus shell_set_inventory = 2;
    repeated ShellStatus shell_object_inventory = 4;
    
    repeated FarmConfiguration farm_configs = 3;
    message FarmConfiguration {
        repeated FarmElement locked_elements = 10;
        repeated ShellConfiguration shell_configs = 1;
        repeated ShellSetConfiguration shell_set_configs = 2;
        optional bool configure_chickens_by_group = 7;
        repeated ShellGroupConfiguration group_configs = 8;
        repeated ChickenConfig chicken_configs = 9;
        optional bool lighting_config_enabled = 11;
        optional LightingConfig lighting_config = 12;
    }
    
    repeated SavedFarmConfiguration saved_configs = 9;
    message SavedFarmConfiguration {
        optional string name = 1;
        optional FarmConfiguration config = 2;
        optional double client_save_time = 3;
    }
    
    repeated string new_shells_downloaded = 6;
    repeated string new_shells_seen = 7;
    optional bool lighting_controls_unlocked = 10;
    
    message ShellConfiguration {
        optional ShellSpec.AssetType asset_type = 1;
        optional uint32 index = 2;
        optional string shell_identifier = 3;
    }
    
    message ShellSetConfiguration {
        optional FarmElement element = 1;
        optional uint32 index = 2;
        optional string shell_set_identifier = 3;
        optional string variation_identifier = 4;
        optional string decorator_identifier = 5;
    }
    
    message ShellGroupConfiguration {
        optional ShellSpec.AssetType asset_type = 1;
        optional string group_identifier = 2;
    }
    
    message ChickenConfig {
        optional string chicken_identifier = 1;
        optional string hat_identifier = 2;
    }
    
    message LightingConfig {
        optional Vector3 light_dir = 1;
        optional Vector4 light_direct_color = 2;
        optional float light_direct_intensity = 3;
        optional Vector4 light_ambient_color = 4;
        optional float light_ambient_intensity = 5;
        optional Vector4 fog_color = 6;
        optional float fog_near = 7;
        optional float fog_far = 8;
        optional float fog_density = 9;
    }
    
    enum FarmElement {
        HEN_HOUSE = 1;
        SILO = 2;
        MAILBOX = 3;
        TROPHY_CASE = 4;
        GROUND = 5;
        HARDSCAPE = 6;
        HYPERLOOP = 7;
        DEPOT = 8;
        LAB = 9;
        HATCHERY = 10;
        HOA = 11;
        MISSION_CONTROL = 12;
        FUEL_TANK = 13;
        CHICKEN = 14;
        HAT = 15;
        UNKNOWN = 99;
    }
}

message ShellPopularityStats {
    repeated Entry data = 1;
    message Entry {
        optional string id = 1;
        optional ShellDB.FarmElement element = 2;
        optional uint64 spent = 3;
        optional uint64 count = 4;
    }
}

message ShellsActionLog {
    optional BasicRequestInfo rinfo = 8;
    optional string user_id = 1;
    optional string action = 2;
    optional string sub_id = 3;
    optional ShellDB.FarmElement farm_element = 9;
    optional uint32 cost = 4;
    optional double approx_time = 5;
    optional string version = 6;
    optional int32 farm_index = 7;
    optional double soul_eggs = 10;
    optional uint64 tickets_spent = 11;
    optional uint64 gold_spent = 12;
}

message UserVerificationAnalysis {
    optional Status overall_status = 1;
    enum Status {
        UNKNOWN = 0;
        PROCESSING = 1;
        COMPLETE = 2;
    }
    
    optional double start_time = 2;
    optional double completion_time = 3;
    optional double num_prestiges = 14;
    optional double soul_eggs = 15;
    optional uint32 eggs_of_prophecy = 27;
    optional Status iap_status = 18;
    optional bool verified_pro_permit = 4;
    optional uint32 verified_piggy_breaks = 5;
    optional uint32 verified_other_iap = 6;
    optional uint32 unverified_iap = 7;
    optional double gold_earned = 13;
    optional bool regular_iap_buyer = 22;
    optional bool regular_iap_cheater = 23;
    optional Status artifacts_status = 19;
    optional uint32 missions_completed = 8;
    optional double artifacts_collected = 9;
    optional double artifacts_consumed = 10;
    optional double artifacts_in_inventory = 11;
    optional uint64 rare_artifacts_in_inventory = 33;
    optional uint64 rare_artifacts_on_server = 34;
    optional uint64 legendary_artifacts_in_inventory = 35;
    optional uint64 legendary_artifacts_on_server = 36;
    optional double gold_spent_crafting = 21;
    optional bool excessive_consumes = 24;
    optional bool excessive_inventory = 25;
    optional bool excessive_spend = 26;
    optional Status contracts_status = 20;
    optional uint32 num_coop_memberships = 12;
    optional uint32 valid_contracts = 16;
    repeated string invalid_contracts = 17;
    optional bool excessive_eop = 28;
    optional bool excessive_invalid_contracts = 29;
    optional bool verified = 30;
    optional bool verification_override = 31;
    optional bool verification_override_value = 32;
}

message UserSubscriptionInfo {
    optional Level subscription_level = 13;
    enum Level {
        STANDARD = 0;
        PRO = 1;
    }
    
    optional Level next_subscription_level = 15;
    optional bool lock_next_subscription_level = 18;
    optional aux.Platform platform = 10;
    optional string original_transaction_id = 1;
    optional string linked_transaction_id = 16;
    optional bool acknowledged = 17;
    optional double first_subscribed = 2;
    optional double period_end = 4;
    
    optional Status status = 5;
    enum Status {
        UNKNOWN = 0;
        ACTIVE = 1;
        EXPIRED = 2;
        REVOKED = 3;
        GRACE_PERIOD = 4;
        PAUSE_HOLD = 5;
    }
    
    optional string store_status = 14;
    optional bool auto_renew = 6;
    optional bool sandbox = 19;
    optional double last_updated = 7;
    
    repeated HistoryEntry history = 9;
    message HistoryEntry {
        optional double timestamp = 1;
        optional string message_id = 2;
        optional string message = 3;
    }
    
    repeated string past_user_ids = 11;
}

message SubscriptionChangeHintRequest {
    optional BasicRequestInfo rinfo = 3;
    optional string original_transaction_id = 1;
    optional UserSubscriptionInfo.Level next_subscription_level = 2;
}

message CXPEvalRolloutInfo {
    optional string current_id = 1;
    optional uint32 basis_points = 2;
}

enum Egg {
    EDIBLE = 1;
    SUPERFOOD = 2;
    MEDICAL = 3;
    ROCKET_FUEL = 4;
    SUPER_MATERIAL = 5;
    FUSION = 6;
    QUANTUM = 7;
    IMMORTALITY = 8;
    TACHYON = 9;
    GRAVITON = 10;
    DILITHIUM = 11;
    PRODIGY = 12;
    TERRAFORM = 13;
    ANTIMATTER = 14;
    DARK_MATTER = 15;
    AI = 16;
    NEBULA = 17;
    UNIVERSE = 18;
    ENLIGHTENMENT = 19;
    CHOCOLATE = 100;
    EASTER = 101;
    WATERBALLOON = 102;
    FIREWORK = 103;
    PUMPKIN = 104;
    UNKNOWN = 1000;
}

enum FarmType {
    EMPTY = 1;
    HOME = 2;
    CONTRACT = 3;
}

enum GoalType {
    EGGS_LAID = 1;
    UNKNOWN_GOAL = 100;
}

enum RewardType {
    CASH = 1;
    GOLD = 2;
    SOUL_EGGS = 3;
    EGGS_OF_PROPHECY = 4;
    EPIC_RESEARCH_ITEM = 5;
    PIGGY_FILL = 6;
    PIGGY_MULTIPLIER = 7;
    PIGGY_LEVEL_BUMP = 8;
    BOOST = 9;
    BOOST_TOKEN = 10;
    ARTIFACT = 11;
    ARTIFACT_CASE = 12;
    CHICKEN = 13;
    SHELL_SCRIPT = 14;
    UNKNOWN_REWARD = 100;
}

enum UILocation {
    NONE = 0;
    SHOP = 1;
    BOOST_SHOP = 2;
    PIGGY = 3;
    PRO_PERMIT = 4;
    ULTRA_SHOP = 10;
    SHELLS = 5;
    SHELL_SETS = 6;
    CHICKENS = 7;
    CHICKEN_HATS = 11;
    EPIC_RESEARCH = 8;
    SETTINGS = 9;
}

enum UserType {
    ALL_USERS = 0;
    EGGED_UP = 15;
    CONTRACTS_UNLOCKED = 1;
    ARTIFACTS_UNLOCKED = 3;
    FUEL_TANK_UNLOCKED = 4;
    PRO_PERMIT_ACTIVE = 5;
    ULTRA_ACTIVE = 6;
    NO_PRO_PERMIT = 7;
    NO_ULTRA = 8;
    CONTRACTS_INACTIVE = 9;
    CONTRACTS_ACTIVE = 10;
    PLAYING_CONTRACT = 11;
    ARTIFACTS_INACTIVE = 12;
    ARTIFACTS_ACTIVE = 13;
    PRESTIGE_READY = 14;
    PIGGY_HESITANT = 16;
}

enum LeaderboardScope {
    ALL_TIME = 0;
    CURRENT_SEASON = 1;
}
